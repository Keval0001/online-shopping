package net.ks.shoppingbackend.test;

import static org.junit.Assert.assertEquals;

import org.junit.BeforeClass;
import org.junit.Test;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import net.ks.shoppingbackend.dao.CategoryDAO;
import net.ks.shoppingbackend.dto.Category;

public class CategoryTestCase {

	private static AnnotationConfigApplicationContext context;

	private static CategoryDAO categoryDAO;

	private Category category;

	// Initialize context and categoryDAO
	// Variable get initialize
	@BeforeClass
	public static void init() {

		context = new AnnotationConfigApplicationContext();
		context.scan("net.ks.shoppingbackend");
		context.refresh();
		categoryDAO = (CategoryDAO) context.getBean("categoryDAO");
	}
	// Note - Successfully -> Something went wrong while
	/*
	 * @Test public void testAddCategory(){ category = new Category(); // Id is
	 * autogenerated so not needed category.setName("Mobile");
	 * category.setDescription("This is Mobile");
	 * category.setImageURL("Cat_4.png");
	 * 
	 * assertEquals("Successfully added a category inside the table!",true,
	 * categoryDAO.add(category));
	 * 
	 * }
	 */
	/*
	 * @Test public void testGetCategory(){ category = categoryDAO.get(3);
	 * assertEquals("Successfully fetched a single category from the table!"
	 * ,"Television",category.getName());
	 * 
	 * }
	 */
	/*
	 * @Test public void testUpdateCategory(){ category = categoryDAO.get(3);
	 * category.setName("TV");
	 * assertEquals("Successfully update a single category from the table!",true
	 * ,categoryDAO.update(category));
	 * 
	 * }
	 */
	// Deleting is updating making isActive false
	/*
	 * @Test public void testDeleteCategory(){ category = categoryDAO.get(3);
	 * assertEquals("Successfully deleted a single category from the table!"
	 * ,true,categoryDAO.delete(category));
	 * 
	 * }
	 */

	/*
	 * @Test public void testListCategory() { category = categoryDAO.get(3);
	 * assertEquals("Successfully fethced the list of category from the table!",
	 * 3, categoryDAO.list().size()); }
	 */

	@Test
	public void testCRUDCategory() {

		// add operation

		category = new Category();
		category.setName("Laptop");
		category.setDescription("This is laptop!");
		category.setImageURL("Cat_20.png");

		assertEquals("Something went wrong while added a category inside the table!", true, categoryDAO.add(category));

		category = new Category();
		category.setName("Television");
		category.setDescription("This is Television");
		category.setImageURL("Cat_10.png");

		assertEquals("Something went wrong while added a category inside the table!", true, categoryDAO.add(category));

		// fetching and updating the category
		category = categoryDAO.get(2);
		category.setName("TV");
		assertEquals("Something went wrong while updated a category inside the table!", true,
				categoryDAO.update(category));

		// delete the category
		assertEquals("Something went wrong while deleted a single category from the table!", true,
				categoryDAO.delete(category));

		// fetching hte list
		assertEquals("Something went wrong while fethced the list of category from the table!", 1,
				categoryDAO.list().size());
	}

}
